name: Node.js and Python CI
image: ubuntu:latest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: latest # Define your Node version here
        python-version: latest # Define your Python version here

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Node.js dependencies
      run: |
        cd path/to/frontend  # Replace with your frontend directory
        npm install

    - name: Build frontend
      run: |
        cd /frontend  # Replace with your frontend directory
        npm run build  # Replace with your frontend build command

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: |
        cd /backend  # Replace with your backend directory
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test backend
      run: |
        cd /backend  # Replace with your backend directory
        echo would run backend test now  # Replace with your backend test command













# # Definiere das Docker-Image f√ºr den GitLab Runner
# image: node:latest

# stages:
#   - build
# #  - test
# #  - deploy

# react_build:
#   stage: build
#   script:
#     - cd frontend
#     - echo Installing npm packages
#     - npm install --fetch-timeout=60000
#     - echo Baue die Anwendung
#     - npm run build


# variables:
#   CI_NODE_INDEX: "1" 

# cache:
#   key: ${CI_COMMIT_REF_SLUG}
#   paths:
#     - frontend/node_modules/
#     - backend/.venv/  

# react_build:
#   stage: build
#   script:
#     - cd frontend
#     - echo Installing npm packages
#     - npm install
#     - cd Baue die Anwendung
#     - npm run build

#react_test:
#  stage: test
#  script:
#    - cd frontend
#    - echo Installing npm packages
#    - npm install
#    - cd Teste die Anwendung
#    - npm run test

#python_build:
#  stage: build
#  script:
#   - cd backend
#    - pip install -r requirements.txt

#python_test:
#  stage: test
#  script:
#    - cd backend
#   - pip install -r requirements.txt

#deploy:
#  stage: deploy
#  script:
#   - echo "Deploying..."

