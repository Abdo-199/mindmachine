# Definiere das Docker-Image f√ºr den GitLab Runner

stages:
  - build
  - test
  - deploy
cache:
  paths:
    - frontend/node_modules/
    - backend/.venv/ 

# variables:
#   DOCKER_HOST: tcp://docker:2375/
#   DOCKER_DRIVER: overlay2

# # Official docker compose image.
# image:
#   name: docker/compose:latest

# services:
#   - docker:dind

# before_script:
#   - docker version
#   - docker-compose version

# build:
#   stage: build
#   script:
#     - docker-compose down
#     - docker-compose build
#     - docker-compose up

react_build:
  stage: build
  image: node:latest
  script:
    - cd frontend
    - echo Installiere npm-packages
    - npm install 
    - echo Baue das Frontend
    - CI=false npm run build


backend_build:
  stage: build
  image: python:latest
  script:
    - cd backend
    - echo Baue das Backend
    - pip install --no-cache-dir -r requirements.txt

react_test:
 stage: test
 script:
   - cd frontend
   - echo Installiere npm-packages
   - npm install
   - echo Teste das Frontend
   - CI=false npm run test

deploy_Production:
  image: ubuntu:latest
  stage: deploy
  
  before_script:
  - apt-get update -qq
  - apt-get install -qq git
  # Setup SSH deploy keys
  - 'which ssh-agent || ( apt-get install -qq openssh-client )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh mindmachine@141.45.224.114 "cd ./mindmachine/ && git reset --hard HEAD && git clean -f -d && git pull  && docker-compose down && docker-compose up --build -d && exit"
  only:
    - main



