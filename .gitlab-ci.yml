# Definiere das Docker-Image f√ºr den GitLab Runner

stages:
  - build
  - test
#  - deploy
cache:
  paths:
    - frontend/node_modules/
    - backend/.venv/ 

# before_script:
#   - apk add --no-cache docker-compose

# react_build:
#   stage: build
#   image: node:latest
#   script:
#     - cd frontend
#     - echo Installiere npm-packages
#     - npm install 
#     - echo Baue das Frontend
#     - CI=false npm run build

# react_test:
#  stage: test
#  script:
#    - cd frontend
#    - echo Installiere npm-packages
#    - npm install
#    - echo Teste das Frontend
#    - CI=false npm run test

# backend_build:
#   stage: build
#   image: python:latest
#   script:
#     - cd backend
#     - echo Baue das Backend
#     - pip install -r requirements.txt

docker_build:
  stage: build
  image: docker:stable 
  script:
    -cd mindmachine
    - echo building docker compose
    - docker-compose build
    - echo pushing docker compose
    - docker-compose push
  only:
    - main
# deploy:
#   stage: deploy
#   script:
#     - apk add --no-cache openssh-client sshpass
#     - sshpass -p "$DEPLOY_SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $DEPLOY_SERVER_USER@$DEPLOY_SERVER_IP "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
#     - sshpass -p "$DEPLOY_SERVER_PASSWORD" scp ./docker-compose.yml $DEPLOY_SERVER_USER@$DEPLOY_SERVER_IP:/path/to/deploy
#     - sshpass -p "$DEPLOY_SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $DEPLOY_SERVER_USER@$DEPLOY_SERVER_IP "cd /path/to/deploy && docker-compose pull && docker-compose up -d"
#   only:
#     - main

